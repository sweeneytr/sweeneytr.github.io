---
import { getCollection } from "astro:content";
import { Card } from "@eliancodes/brutal-ui";
import { Button } from "@eliancodes/brutal-ui";
import PostGrid from "./PostGrid.astro";
import PostItem from "./PostItem.astro";
import BlogSummaryCard from "@components/blog/BlogSummaryCard.astro";
import type { ContentEntryMap } from "astro:content";

interface Props {
  count?: number;
  collection: keyof ContentEntryMap;
  baseUrl: string;
  plural: string;
}

const { count, collection, baseUrl, plural } = Astro.props;

const posts = await getCollection(collection).then((posts) =>
  posts.reverse().slice(0, count ?? 3)
);
---

<section class="mt-8">
  <Card color={collection === "blog" ? "#4ade80" : "#C084FC"}>
    <div class="flex justify-between items-start">
      <h2 class="text-2xl md:text-4xl lg:text-6xl mb-8 dm-serif case-capital">
        Recent {plural}
      </h2>
      <div class="hidden md:block">
        <Button href={baseUrl}>Go to {collection} &rarr;</Button>
      </div>
      <div class="block md:hidden">
        <Button href={baseUrl}>to {collection}</Button>
      </div>
    </div>
    <PostGrid>
      {
        posts.map((post) => (
          <PostItem>
            <BlogSummaryCard post={post} baseUrl={baseUrl} />
          </PostItem>
        ))
      }
    </PostGrid>
  </Card>
</section>
